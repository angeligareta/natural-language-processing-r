# Intelligent Systems. Hands-on 2
## Author: Angel Igareta [angel@igareta.com](angel@igareta.com)

## Packages ----
```{r}
# install.packages("rJava")
# install.packages("openNLPmodels.en", repos = "http://datacube.wu.ac.at")
#install.packages("NLP")
#install.packages("openNLP")
#install.packages("tm")

library(rJava)
.jinit(parameters="-Xmx4g")
library(NLP)
library(openNLP) 
library(openNLPmodels.en)
library(tm)
```

## Utils ----
```{r}
get_annotations_from_document = function(doc){
  x=as.String(doc)
  sent_token_annotator <- Maxent_Sent_Token_Annotator()
  word_token_annotator <- Maxent_Word_Token_Annotator()
  pos_tag_annotator <- Maxent_POS_Tag_Annotator()
  y1 <- annotate(x, list(sent_token_annotator, word_token_annotator))
  y2 <- annotate(x, pos_tag_annotator, y1)
  parse_annotator <- Parse_Annotator()
  y3 <- annotate(x, parse_annotator, y2)
  return(y3)  
} 

get_annotated_merged_document = function(doc,annotations){
  x=as.String(doc)
  y2w <- subset(annotations, type == "word")
  tags <- sapply(y2w$features, '[[', "POS")
  r1 <- sprintf("%s/%s", x[y2w], tags)
  r2 <- paste(r1, collapse = " ")
  return(r2)  
}

get_annotated_plain_text_document = function(doc,annotations){
  x=as.String(doc)
  a = AnnotatedPlainTextDocument(x,annotations)
  return(a)  
} 
```

## Load corpus ----
```{r}
source_pos = DirSource("./dataset/pos", encoding = "UTF-8")
corpus = Corpus(source_pos)
```

## Annotate corpus ----
```{r}
annotations = lapply(corpus, get_annotations_from_document)

## Attach the annotations to the document and store the annotated corpus in another variable
corpus_tagged = Map(get_annotated_plain_text_document, corpus, annotations)

## Store all the annotations inline with the text and store the annotated corpus in another variable
corpus_tagged_text = Map(get_annotated_merged_document, corpus, annotations)
```


